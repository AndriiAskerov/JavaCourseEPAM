Будь ласка, перейдіть до RangedOpsIntegerSet і реалізуйте його методи.

RangedOpsIntegerSet — це набір цілого числа. Він має два додаткові методи:

boolean add(int fromInclusive, int toExclusive)
boolean remove(int fromInclusive, int toExclusive)
Ці методи призначені для додавання/вилучення діапазонів значень.

Необхідно реалізувати такі методи:

add (single-value) - додає одне значення в набір
remove (single-value) - видаляє одне значення з набору
add (ranged) - додає діапазон значень до набору (перший аргумент - включно, останній аргумент - виключний). Поверніть true, якщо будь-яке зі значень діапазону було фактично додано.
remove(ranged) - видаляє діапазон значень зі списку (перший аргумент - включно, останній аргумент - виключний). Поверніть true, якщо будь-яке зі значень діапазону було фактично видалено.
ітератор - виконує ітерації над елементами набору в природному порядку.
size - повертає кількість поточних елементів черги
Приклади
RangedOpsIntegerSet set = new RangedOpsIntegerSet();
set.add(1, 5);
for(Integer el : set){
    System.out.println(el);
}
1
2
3
4
RangedOpsIntegerSet set = new RangedOpsIntegerSet();
set.add(1, 5);
set.add(9, 11);
for(Integer el : set){
    System.out.println(el);
}
1
2
3
4
9
10
RangedOpsIntegerSet set = new RangedOpsIntegerSet();
set.add(1, 15);
set.remove(3, 12);
for(Integer el : set){
    System.out.println(el);
}
1
2
12
13
14
_________________________________________________________________________________________________
Int String Capped Map
Мета цієї вправи — навчити вас впроваджувати Collections.

Розрахункове навантаження на цю вправу – 180 хв.

Опис
Будь ласка, перейдіть до IntStringCappedMap і реалізуйте його методи.

IntStringCappedMap — це карта з цілочисельними ключами та рядковими значеннями.
"Capped" означає, що ця карта має властивість ємності.
Загальна довжина всіх значень рядка на карті не повинна перевищувати її місткість.
Якщо нова додана вартість призведе до такого переповнення, карта повинна виключити свої поточні записи, доки додавання нового значення не перевищить її можливості.
Виселення має відбуватися за порядком додавання значень на карту – спочатку потрібно виселити найстаріше значення.
Зауважте, що якщо довжина нового значення String перевищує ємність, map має викликати виключення IllegalArgumentException і виключити запис.

Необхідно реалізувати такі методи:

entrySet - метод частково реалізовано.
Він повертає AbstractSet, і ви повинні надати лише реалізації для його методів next і hasNext.
get - повернути значення за його ключем.
put - встановити значення за заданим ключем.
Якщо це призводить до перевищення ємності, не забудьте виселити стільки найстаріших елементів, скільки буде потрібно.
видалити - видаляє значення за ключем.
size - повертає кількість записів карти.
Приклад
IntStringCappedMap map = new IntStringCappedMap(25);
map.put(5, "П'ять");
map.put(6, "Шість");
map.put(7, "Сім");
map.put(8, "Вісім");
map.put(12, "Дванадцять");
map.put(9, "Дев'ять");
map.put(1, "Один");

System.out.println(new TreeMap<>(map));
//{1=один, 7=сім, 8=вісім, 9=дев'ять, 12=дванадцять}
_________________________________________________________________________________________________
Спеціальні колекції
Опис
Впроваджуйте спеціальні колекції за заданими специфікаціями

Список парних рядків
Реалізуйте список рядків, які додають/вилучають елементи парами.

Кожен раз, коли ви додаєте рядок до списку, ви повинні додавати його двічі, щоб список містив пару записів цього рядка.

Кожен раз, коли ви видаляєте рядок, ви повинні видаляти його пару.

Список повинен утримувати пари разом: якщо ви додаєте рядок за індексом, переконайтеся, що він не розірве пару. Поставте після нього пару нового елемента.

Що має бути охоплено у вашій реалізації:

додавання
додавання за індексом
видалення об'єкта
видалення за індексом
отримання за індексом
встановлення за індексом
додавання колекції
додавання колекції за індексом
ітератор (видалення через ітератор не потрібно)
Відсортовано за цілими абсолютними значеннями
Реалізуйте клас відсортованого набору Integer. Значення в наборі слід сортувати за їх абсолютними значеннями в порядку зростання.

Що має бути охоплено у вашій реалізації:

додавання елемента
знімний елемент
пошуковий елемент
додавання колекції
ітератор (видалення через ітератор не потрібно)
Середня черга
Реалізуйте чергу Integer, яка повертає його середній елемент.
Медіана тут є елементом, який має однакову кількість менших і більших елементів. Медіана являє собою середнє значення колекції.
Наприклад, якщо ви помістили 1, 2, 3, 4, 5 до черги, а потім витягнете з неї елемент, черга поверне 3.
Якщо кількість елементів парна, то можна повернути два значення. Поверніть меншу.
Більше прикладів:

1, 10, 100 → 10
100, 10, 1 → 10
100, 1, 10 → 10
1, 987, 2 → 2
1, 987, 2, 3 → 2
1, 987, 4, 2, 3 → 3
1, 2, 3, 3, 3 → 3
Необхідно реалізувати такі методи:

offer - відправити елемент до черги
poll - витягнути елемент із черги
peek - отримати елемент у верхній частині черги (просто отримати, не витягувати)
iterator - перебирає елементи черги (не потрібно підтримувати порядок)
розмір - просто кількість поточних елементів черги
_________________________________________________________________________________________________